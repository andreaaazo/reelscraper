name: Publish to PyPI on Tag

on:
  push:
    tags:
      - "v*"   # Matches tags like v0.1.0, v1.2.3, etc.

permissions:
  contents: read

jobs:
  build-dist:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      # STEP 1: Bump version in pyproject.toml to match the pushed tag
      - name: Update pyproject.toml version
        run: |
          # remove leading 'v' from the tag name
          VERSION="${GITHUB_REF_NAME#v}"

          # Install toml if not using PEP 621 from stdlib
          python -m pip install --upgrade pip
          python -m pip install toml

          # Update the version in pyproject.toml
          python -c "
import toml
path = 'pyproject.toml'
data = toml.load(path)
data['project']['version'] = '$VERSION'
with open(path, 'w') as f:
    toml.dump(data, f)
"
      
      # STEP 2: Build the updated distribution
      - name: Build release distributions
        run: |
          python -m pip install build
          python -m build

      # STEP 3: Upload the newly built artifacts
      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  publish-dist:
    runs-on: ubuntu-latest
    needs: [build-dist]
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
